jenkins:
  securityRealm:
    ldap:
      configurations:
        - server: ldap
          rootDN: dc=example,dc=org
          managerDN: cn=admin,dc=example,dc=org
          managerPasswordSecret: ${LDAP_PASSWORD}
          groupSearchBase: ou=groups
          userSearchBase: ou=people
      cache:
        size: 100
        ttl: 10
      userIdStrategy: CaseSensitive
      groupIdStrategy: CaseSensitive
  #   local:
  #     allowsSignup: false
  #     users:
  #      - id: ${JENKINS_ADMIN_USER}
  #        password: ${JENKINS_ADMIN_PASSWORD}
  # authorizationStrategy:
  #   globalMatrix:
  #     grantedPermissions:
  #       - "Overall/Administer:authenticated"
  nodes:
    - permanent:
        labelString: "linux docker git"
        mode: NORMAL
        name: "docker slave"
        remoteFS: "/jenkins"
        launcher:
          SSHLauncher:
            host: jenkins_slave_docker
            port: 22
            credentialsId: jenkinsSSH
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false
tool:
  git:
    installations:
      - name: git
        home: /usr/bin/git
credentials:
  system:
    domainCredentials:
      - credentials:
        - basicSSHUserPrivateKey:
            scope: GLOBAL
            id: jenkinsSSH
            username: jenkins
            passphrase: ${SSH_KEY_PASSWORD}
            description: "SSH Key for slaves"
            privateKeySource:
              directEntry:
                privateKey: ${SSH_KEY}
        - usernamePassword:
            scope: GLOBAL
            id: gerritUsername
            username: ${ADMIN_USER}
            password: ${ADMIN_PASSWORD}
            description: Admin username/password for cloning repos

jobs:
  - script: >
      multibranchPipelineJob('PetClinic') {
          branchSources {
              git {
                  remote('https://github.com/BaukJ/spring-petclinic.git')
                  //credentialsId('github-ci')
              }
          }
          orphanedItemStrategy {
              discardOldItems {
                  numToKeep(20)
              }
          }
      }
  - script: >
      multibranchPipelineJob('PetClinic_Local') {
          branchSources {
              git {
                remote('ssh://jenkins@gerrit:29418/spring-petclinic.git')
                credentialsId('jenkinsSSH')
              }
          }
          factory {
            workflowBranchProjectFactory {
              scriptPath('Jenkinsfile_Gerrit')
            }
          }
          orphanedItemStrategy {
              discardOldItems {
                  numToKeep(20)
              }
          }
      }
  - script: >
      multibranchPipelineJob('PythonApp_Local') {
          branchSources {
              git {
                remote('ssh://jenkins@gerrit:29418/PythonApp.git')
                credentialsId('jenkinsSSH')
              }
          }
          factory {
            workflowBranchProjectFactory {
              scriptPath('Jenkinsfile')
            }
          }
          orphanedItemStrategy {
              discardOldItems {
                  numToKeep(20)
              }
          }
      }
  - script: >
       folder('testjobs')
  - script: >
       pipelineJob('testjobs/default-agent') {
         definition {
           cps {
             script("""\
               pipeline {
                 agent any
                 stages {
                   stage ('test') {
                     steps {
                       echo "hello"
                     }
                   }
                 }
               }""".stripIndent())
           }
         }
       }


